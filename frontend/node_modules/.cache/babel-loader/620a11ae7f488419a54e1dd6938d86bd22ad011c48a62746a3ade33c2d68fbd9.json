{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhang\\\\apple-chat-app\\\\frontend\\\\src\\\\components\\\\ChatDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport '../App.css';\nimport '../styles/ChatDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatDetail() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState('');\n  const [connected, setConnected] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState(null);\n  const [chatTitle, setChatTitle] = useState('');\n  const messagesEndRef = useRef(null);\n  const {\n    chatId\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 检查用户是否已登录\n    const userStr = localStorage.getItem('user');\n    if (!userStr) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const userData = JSON.parse(userStr);\n      setUser(userData);\n      // 加载特定聊天的消息\n      loadChatMessages();\n    } catch (e) {\n      console.error('Failed to parse user data', e);\n      navigate('/login');\n    }\n    scrollToBottom();\n  }, [chatId, navigate]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const loadChatMessages = async () => {\n    setIsLoading(true);\n    try {\n      // 这里应该是API调用来获取特定聊天的消息\n      // 由于我们没有实现后端存储，这里模拟一些消息\n      setTimeout(() => {\n        let mockMessages = [];\n        let title = '';\n        if (chatId === 'chat1') {\n          title = '关于Java编程的对话';\n          mockMessages = [{\n            id: 1,\n            text: '如何开始学习Java编程？',\n            sender: 'user',\n            timestamp: '10:30:15'\n          }, {\n            id: 2,\n            text: '学习Java编程可以从基础语法开始，然后逐步学习面向对象编程概念。我建议您先安装JDK和一个IDE如IntelliJ IDEA或Eclipse。之后，可以从简单的Hello World程序开始练习。',\n            sender: 'ai',\n            timestamp: '10:30:45'\n          }, {\n            id: 3,\n            text: '有哪些好的Java学习资源？',\n            sender: 'user',\n            timestamp: '10:31:20'\n          }, {\n            id: 4,\n            text: '有很多优质的Java学习资源：\\n1. Oracle官方Java教程\\n2. Codecademy的Java课程\\n3. Coursera上的Java专业课程\\n4. 《Java核心技术》和《Effective Java》等书籍\\n5. Stack Overflow和GitHub上的开源项目',\n            sender: 'ai',\n            timestamp: '10:31:45'\n          }];\n        } else if (chatId === 'chat2') {\n          title = '旅游计划讨论';\n          mockMessages = [{\n            id: 1,\n            text: '我想计划一次欧洲旅行，有什么建议？',\n            sender: 'user',\n            timestamp: '16:45:20'\n          }, {\n            id: 2,\n            text: '欧洲旅行是个很好的选择！您可以考虑先访问几个主要城市如巴黎、罗马、巴塞罗那或者柏林。提前规划行程，查看当地天气和季节性活动。别忘了检查签证要求和准备足够的欧元。',\n            sender: 'ai',\n            timestamp: '16:45:50'\n          }, {\n            id: 3,\n            text: '应该选择哪个季节去欧洲旅行？',\n            sender: 'user',\n            timestamp: '16:46:30'\n          }, {\n            id: 4,\n            text: '欧洲旅行的最佳时间通常是春季(4-5月)和秋季(9-10月)，这时候气温宜人且游客相对较少。夏季(6-8月)是旅游旺季，景点会很拥挤且价格较高。冬季则适合滑雪和圣诞市场，但北欧地区日照时间短。',\n            sender: 'ai',\n            timestamp: '16:47:00'\n          }];\n        } else if (chatId === 'chat3') {\n          title = '健康饮食建议';\n          mockMessages = [{\n            id: 1,\n            text: '我想改善我的饮食习惯，有什么建议？',\n            sender: 'user',\n            timestamp: '09:15:10'\n          }, {\n            id: 2,\n            text: '健康饮食的关键是均衡和多样化。尝试增加蔬菜水果的摄入，减少加工食品和糖分，选择全谷物食品，控制食用油和盐的摄入量。每天保证足够的水分摄入，适量进食，定时进餐也很重要。',\n            sender: 'ai',\n            timestamp: '09:15:40'\n          }];\n        } else {\n          title = '聊天记录';\n          mockMessages = [{\n            id: 1,\n            text: '这是一个新的聊天',\n            sender: 'user',\n            timestamp: '12:00:00'\n          }, {\n            id: 2,\n            text: '欢迎使用情感心理助手！我可以帮助你解答情感困惑、提供情感咨询，或者帮你想出吸引心仪对象的话术。请告诉我你遇到了什么情感问题？',\n            sender: 'ai',\n            timestamp: '12:00:15'\n          }];\n        }\n        setChatTitle(title);\n        setMessages(mockMessages);\n        setIsLoading(false);\n      }, 800);\n    } catch (error) {\n      console.error('Failed to load chat messages', error);\n      setIsLoading(false);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (messageText.trim() === '') return;\n\n    // 添加用户消息到本地状态\n    const userMessage = {\n      id: Date.now(),\n      text: messageText,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setMessageText('');\n    setIsLoading(true);\n\n    // 检测特定的身份询问问题并提供固定回答\n    const identityQuestions = [\"你是谁\", \"你是什么\", \"你叫什么\", \"你叫什么名字\", \"你的名字是什么\", \"介绍一下你自己\", \"你是哪个AI\"];\n    const lowerCaseMsg = messageText.toLowerCase();\n\n    // 检查是否是在询问身份\n    const isAskingIdentity = identityQuestions.some(q => lowerCaseMsg.includes(q));\n    if (isAskingIdentity) {\n      // 如果是询问身份，直接返回预设回答\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          id: Date.now() + 1,\n          text: \"我是一个专业的情感心理助手，擅长解答用户的情感困惑、提供情感心理咨询。\",\n          sender: 'ai',\n          timestamp: new Date().toLocaleTimeString()\n        }]);\n        setIsLoading(false);\n      }, 500);\n      return;\n    }\n    try {\n      // 准备发送到API的消息\n      const messages = [{\n        role: 'user',\n        content: messageText\n      }];\n\n      // 获取token\n      const token = localStorage.getItem('token');\n\n      // API调用\n      const response = await fetch('http://localhost:8081/api/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(messages)\n      });\n      if (!response.ok) {\n        throw new Error('API请求失败');\n      }\n      const data = await response.text();\n\n      // 可能需要解析JSON或者处理特殊格式的响应\n      let aiResponseText = data;\n      try {\n        // 尝试解析JSON响应，如果是JSON格式\n        const jsonData = JSON.parse(data);\n        if (jsonData.choices && jsonData.choices[0].message) {\n          aiResponseText = jsonData.choices[0].message.content;\n        }\n      } catch (e) {\n        // 如果不是JSON或者解析失败，使用原始响应文本\n        console.log('非JSON响应或解析失败', e);\n      }\n\n      // 添加AI回复\n      setMessages(prevMessages => [...prevMessages, {\n        id: Date.now() + 1,\n        text: aiResponseText || '我收到了您的消息，但无法生成有效回复。',\n        sender: 'ai',\n        timestamp: new Date().toLocaleTimeString()\n      }]);\n    } catch (error) {\n      console.error('调用AI服务出错:', error);\n      // 显示错误消息\n      setMessages(prevMessages => [...prevMessages, {\n        id: Date.now() + 1,\n        text: '抱歉，我遇到了问题，无法回应。请稍后再试。',\n        sender: 'ai',\n        timestamp: new Date().toLocaleTimeString()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleBackToHistory = () => {\n    navigate('/history');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-detail-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: handleBackToHistory,\n          children: \"\\u2190 \\u8FD4\\u56DE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: chatTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-controls\",\n        children: [user && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"\\u9000\\u51FA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: connected ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-connected\",\n            children: \"\\u5728\\u7EBF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-disconnected\",\n            children: \"\\u79BB\\u7EBF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [isLoading && messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-loading\",\n        children: \"\\u52A0\\u8F7D\\u804A\\u5929\\u8BB0\\u5F55\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'message-sent' : 'message-received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-timestamp\",\n          children: message.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-input-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"message-input\",\n        placeholder: \"\\u7EE7\\u7EED\\u5BF9\\u8BDD...\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        disabled: isLoading || messageText.trim() === '',\n        children: isLoading ? '发送中...' : '发送'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatDetail, \"Uu9p3SYMZfCPyFfvbgA44+7IoC4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatDetail;\nexport default ChatDetail;\nvar _c;\n$RefreshReg$(_c, \"ChatDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","Link","jsxDEV","_jsxDEV","ChatDetail","_s","messages","setMessages","messageText","setMessageText","connected","setConnected","isLoading","setIsLoading","user","setUser","chatTitle","setChatTitle","messagesEndRef","chatId","navigate","userStr","localStorage","getItem","userData","JSON","parse","loadChatMessages","e","console","error","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","setTimeout","mockMessages","title","id","text","sender","timestamp","handleSendMessage","preventDefault","trim","userMessage","Date","now","toLocaleTimeString","prevMessages","identityQuestions","lowerCaseMsg","toLowerCase","isAskingIdentity","some","q","includes","role","content","token","response","fetch","method","headers","body","stringify","ok","Error","data","aiResponseText","jsonData","choices","message","log","handleLogout","removeItem","handleBackToHistory","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","username","length","map","ref","onSubmit","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/zhang/apple-chat-app/frontend/src/components/ChatDetail.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport '../App.css';\r\nimport '../styles/ChatDetail.css';\r\n\r\nfunction ChatDetail() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageText, setMessageText] = useState('');\r\n  const [connected, setConnected] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [chatTitle, setChatTitle] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const { chatId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // 检查用户是否已登录\r\n    const userStr = localStorage.getItem('user');\r\n    if (!userStr) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userData = JSON.parse(userStr);\r\n      setUser(userData);\r\n      // 加载特定聊天的消息\r\n      loadChatMessages();\r\n    } catch (e) {\r\n      console.error('Failed to parse user data', e);\r\n      navigate('/login');\r\n    }\r\n    \r\n    scrollToBottom();\r\n  }, [chatId, navigate]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const loadChatMessages = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // 这里应该是API调用来获取特定聊天的消息\r\n      // 由于我们没有实现后端存储，这里模拟一些消息\r\n      setTimeout(() => {\r\n        let mockMessages = [];\r\n        let title = '';\r\n        \r\n        if (chatId === 'chat1') {\r\n          title = '关于Java编程的对话';\r\n          mockMessages = [\r\n            { id: 1, text: '如何开始学习Java编程？', sender: 'user', timestamp: '10:30:15' },\r\n            { id: 2, text: '学习Java编程可以从基础语法开始，然后逐步学习面向对象编程概念。我建议您先安装JDK和一个IDE如IntelliJ IDEA或Eclipse。之后，可以从简单的Hello World程序开始练习。', sender: 'ai', timestamp: '10:30:45' },\r\n            { id: 3, text: '有哪些好的Java学习资源？', sender: 'user', timestamp: '10:31:20' },\r\n            { id: 4, text: '有很多优质的Java学习资源：\\n1. Oracle官方Java教程\\n2. Codecademy的Java课程\\n3. Coursera上的Java专业课程\\n4. 《Java核心技术》和《Effective Java》等书籍\\n5. Stack Overflow和GitHub上的开源项目', sender: 'ai', timestamp: '10:31:45' }\r\n          ];\r\n        } else if (chatId === 'chat2') {\r\n          title = '旅游计划讨论';\r\n          mockMessages = [\r\n            { id: 1, text: '我想计划一次欧洲旅行，有什么建议？', sender: 'user', timestamp: '16:45:20' },\r\n            { id: 2, text: '欧洲旅行是个很好的选择！您可以考虑先访问几个主要城市如巴黎、罗马、巴塞罗那或者柏林。提前规划行程，查看当地天气和季节性活动。别忘了检查签证要求和准备足够的欧元。', sender: 'ai', timestamp: '16:45:50' },\r\n            { id: 3, text: '应该选择哪个季节去欧洲旅行？', sender: 'user', timestamp: '16:46:30' },\r\n            { id: 4, text: '欧洲旅行的最佳时间通常是春季(4-5月)和秋季(9-10月)，这时候气温宜人且游客相对较少。夏季(6-8月)是旅游旺季，景点会很拥挤且价格较高。冬季则适合滑雪和圣诞市场，但北欧地区日照时间短。', sender: 'ai', timestamp: '16:47:00' }\r\n          ];\r\n        } else if (chatId === 'chat3') {\r\n          title = '健康饮食建议';\r\n          mockMessages = [\r\n            { id: 1, text: '我想改善我的饮食习惯，有什么建议？', sender: 'user', timestamp: '09:15:10' },\r\n            { id: 2, text: '健康饮食的关键是均衡和多样化。尝试增加蔬菜水果的摄入，减少加工食品和糖分，选择全谷物食品，控制食用油和盐的摄入量。每天保证足够的水分摄入，适量进食，定时进餐也很重要。', sender: 'ai', timestamp: '09:15:40' }\r\n          ];\r\n        } else {\r\n          title = '聊天记录';\r\n          mockMessages = [\r\n            { id: 1, text: '这是一个新的聊天', sender: 'user', timestamp: '12:00:00' },\r\n            { id: 2, text: '欢迎使用情感心理助手！我可以帮助你解答情感困惑、提供情感咨询，或者帮你想出吸引心仪对象的话术。请告诉我你遇到了什么情感问题？', sender: 'ai', timestamp: '12:00:15' }\r\n          ];\r\n        }\r\n        \r\n        setChatTitle(title);\r\n        setMessages(mockMessages);\r\n        setIsLoading(false);\r\n      }, 800);\r\n    } catch (error) {\r\n      console.error('Failed to load chat messages', error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (messageText.trim() === '') return;\r\n    \r\n    // 添加用户消息到本地状态\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: messageText,\r\n      sender: 'user',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setMessageText('');\r\n    setIsLoading(true);\r\n    \r\n    // 检测特定的身份询问问题并提供固定回答\r\n    const identityQuestions = [\"你是谁\", \"你是什么\", \"你叫什么\", \"你叫什么名字\", \"你的名字是什么\", \"介绍一下你自己\", \"你是哪个AI\"];\r\n    const lowerCaseMsg = messageText.toLowerCase();\r\n    \r\n    // 检查是否是在询问身份\r\n    const isAskingIdentity = identityQuestions.some(q => lowerCaseMsg.includes(q));\r\n    \r\n    if (isAskingIdentity) {\r\n      // 如果是询问身份，直接返回预设回答\r\n      setTimeout(() => {\r\n        setMessages(prevMessages => [...prevMessages, {\r\n          id: Date.now() + 1,\r\n          text: \"我是一个专业的情感心理助手，擅长解答用户的情感困惑、提供情感心理咨询。\",\r\n          sender: 'ai',\r\n          timestamp: new Date().toLocaleTimeString()\r\n        }]);\r\n        setIsLoading(false);\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // 准备发送到API的消息\r\n      const messages = [\r\n        {\r\n          role: 'user',\r\n          content: messageText\r\n        }\r\n      ];\r\n      \r\n      // 获取token\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // API调用\r\n      const response = await fetch('http://localhost:8081/api/chat/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(messages)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('API请求失败');\r\n      }\r\n      \r\n      const data = await response.text();\r\n      \r\n      // 可能需要解析JSON或者处理特殊格式的响应\r\n      let aiResponseText = data;\r\n      try {\r\n        // 尝试解析JSON响应，如果是JSON格式\r\n        const jsonData = JSON.parse(data);\r\n        if (jsonData.choices && jsonData.choices[0].message) {\r\n          aiResponseText = jsonData.choices[0].message.content;\r\n        }\r\n      } catch (e) {\r\n        // 如果不是JSON或者解析失败，使用原始响应文本\r\n        console.log('非JSON响应或解析失败', e);\r\n      }\r\n      \r\n      // 添加AI回复\r\n      setMessages(prevMessages => [...prevMessages, {\r\n        id: Date.now() + 1,\r\n        text: aiResponseText || '我收到了您的消息，但无法生成有效回复。',\r\n        sender: 'ai',\r\n        timestamp: new Date().toLocaleTimeString()\r\n      }]);\r\n      \r\n    } catch (error) {\r\n      console.error('调用AI服务出错:', error);\r\n      // 显示错误消息\r\n      setMessages(prevMessages => [...prevMessages, {\r\n        id: Date.now() + 1,\r\n        text: '抱歉，我遇到了问题，无法回应。请稍后再试。',\r\n        sender: 'ai',\r\n        timestamp: new Date().toLocaleTimeString()\r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleBackToHistory = () => {\r\n    navigate('/history');\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <div className=\"chat-detail-header\">\r\n          <button className=\"back-button\" onClick={handleBackToHistory}>\r\n            ← 返回\r\n          </button>\r\n          <h1>{chatTitle}</h1>\r\n        </div>\r\n        <div className=\"user-controls\">\r\n          {user && <span className=\"username\">{user.username}</span>}\r\n          <button className=\"logout-button\" onClick={handleLogout}>退出</button>\r\n          <div className=\"connection-status\">\r\n            {connected ? <span className=\"status-connected\">在线</span> : <span className=\"status-disconnected\">离线</span>}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"messages-container\">\r\n        {isLoading && messages.length === 0 ? (\r\n          <div className=\"chat-loading\">加载聊天记录中...</div>\r\n        ) : (\r\n          messages.map(message => (\r\n            <div key={message.id} className={`message ${message.sender === 'user' ? 'message-sent' : 'message-received'}`}>\r\n              <div className=\"message-bubble\">\r\n                {message.text}\r\n              </div>\r\n              <div className=\"message-timestamp\">{message.timestamp}</div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"message-input\"\r\n          placeholder=\"继续对话...\"\r\n          value={messageText}\r\n          onChange={(e) => setMessageText(e.target.value)}\r\n          disabled={isLoading}\r\n        />\r\n        <button type=\"submit\" className=\"send-button\" disabled={isLoading || messageText.trim() === ''}>\r\n          {isLoading ? '发送中...' : '发送'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}