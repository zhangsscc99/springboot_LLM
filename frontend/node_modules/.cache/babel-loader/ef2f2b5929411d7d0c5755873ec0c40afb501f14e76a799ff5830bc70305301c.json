{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhang\\\\apple-chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState('');\n  const [connected, setConnected] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (messageText.trim() === '') return;\n\n    // 添加用户消息到本地状态\n    const userMessage = {\n      id: Date.now(),\n      text: messageText,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setMessageText('');\n    setIsLoading(true);\n    try {\n      // 准备发送到API的消息数组\n      const apiMessages = messages.map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n\n      // 添加当前用户消息\n      apiMessages.push({\n        role: 'user',\n        content: userMessage.text\n      });\n\n      // 发送请求到后端\n      const response = await fetch('http://localhost:8081/api/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(apiMessages)\n      });\n      if (!response.ok) {\n        throw new Error('API请求失败');\n      }\n\n      // 处理流式响应\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let aiResponse = '';\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value);\n        try {\n          // 尝试解析JSON\n          const lines = chunk.split('\\n').filter(line => line.trim() !== '');\n          for (const line of lines) {\n            if (line.startsWith('data: ')) {\n              const jsonStr = line.substring(6);\n              if (jsonStr === '[DONE]') continue;\n              const jsonData = JSON.parse(jsonStr);\n              if (jsonData.choices && jsonData.choices[0].delta && jsonData.choices[0].delta.content) {\n                const content = jsonData.choices[0].delta.content;\n                aiResponse += content;\n\n                // 更新正在构建的AI消息\n                setMessages(prevMessages => {\n                  const lastMessage = prevMessages[prevMessages.length - 1];\n                  if (lastMessage.sender === 'ai' && lastMessage.id === 'ai-typing') {\n                    // 更新现有AI消息\n                    const updatedMessages = [...prevMessages];\n                    updatedMessages[updatedMessages.length - 1] = {\n                      ...lastMessage,\n                      text: aiResponse\n                    };\n                    return updatedMessages;\n                  } else {\n                    // 创建新的AI消息\n                    return [...prevMessages, {\n                      id: 'ai-typing',\n                      text: aiResponse,\n                      sender: 'ai',\n                      timestamp: new Date().toLocaleTimeString()\n                    }];\n                  }\n                });\n              }\n            }\n          }\n        } catch (e) {\n          console.error('解析响应出错:', e);\n        }\n      }\n\n      // 最终消息\n      if (aiResponse) {\n        setMessages(prevMessages => {\n          const filteredMessages = prevMessages.filter(msg => msg.id !== 'ai-typing');\n          return [...filteredMessages, {\n            id: Date.now() + 1,\n            text: aiResponse,\n            sender: 'ai',\n            timestamp: new Date().toLocaleTimeString()\n          }];\n        });\n      }\n    } catch (error) {\n      console.error('调用AI服务出错:', error);\n      // 显示错误消息\n      setMessages(prevMessages => [...prevMessages, {\n        id: Date.now() + 1,\n        text: '抱歉，我遇到了问题，无法回应。请稍后再试。',\n        sender: 'ai',\n        timestamp: new Date().toLocaleTimeString()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Apple Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: connected ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-connected\",\n          children: \"\\u5728\\u7EBF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-disconnected\",\n          children: \"\\u79BB\\u7EBF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: \"\\u8FD8\\u6CA1\\u6709\\u6D88\\u606F\\u3002\\u5F00\\u59CB\\u4E00\\u4E2A\\u65B0\\u5BF9\\u8BDD\\u5427\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'message-sent' : 'message-received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-timestamp\",\n          children: message.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-input-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"message-input\",\n        placeholder: \"\\u8F93\\u5165\\u6D88\\u606F...\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        disabled: isLoading || messageText.trim() === '',\n        children: isLoading ? '发送中...' : '发送'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VxGZEepjZEFuchobihTv5ocNoyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","messageText","setMessageText","connected","setConnected","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","userMessage","id","Date","now","text","sender","timestamp","toLocaleTimeString","prevMessages","apiMessages","map","msg","role","content","push","response","fetch","method","headers","body","JSON","stringify","ok","Error","reader","getReader","decoder","TextDecoder","aiResponse","value","done","read","chunk","decode","lines","split","filter","line","startsWith","jsonStr","substring","jsonData","parse","choices","delta","lastMessage","length","updatedMessages","console","error","filteredMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","ref","onSubmit","type","placeholder","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/zhang/apple-chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageText, setMessageText] = useState('');\r\n  const [connected, setConnected] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (messageText.trim() === '') return;\r\n    \r\n    // 添加用户消息到本地状态\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: messageText,\r\n      sender: 'user',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setMessageText('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // 准备发送到API的消息数组\r\n      const apiMessages = messages.map(msg => ({\r\n        role: msg.sender === 'user' ? 'user' : 'assistant',\r\n        content: msg.text\r\n      }));\r\n      \r\n      // 添加当前用户消息\r\n      apiMessages.push({\r\n        role: 'user',\r\n        content: userMessage.text\r\n      });\r\n      \r\n      // 发送请求到后端\r\n      const response = await fetch('http://localhost:8081/api/chat/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(apiMessages)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('API请求失败');\r\n      }\r\n      \r\n      // 处理流式响应\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();\r\n      let aiResponse = '';\r\n      \r\n      while (true) {\r\n        const { value, done } = await reader.read();\r\n        if (done) break;\r\n        \r\n        const chunk = decoder.decode(value);\r\n        try {\r\n          // 尝试解析JSON\r\n          const lines = chunk.split('\\n').filter(line => line.trim() !== '');\r\n          \r\n          for (const line of lines) {\r\n            if (line.startsWith('data: ')) {\r\n              const jsonStr = line.substring(6);\r\n              if (jsonStr === '[DONE]') continue;\r\n              \r\n              const jsonData = JSON.parse(jsonStr);\r\n              if (jsonData.choices && jsonData.choices[0].delta && jsonData.choices[0].delta.content) {\r\n                const content = jsonData.choices[0].delta.content;\r\n                aiResponse += content;\r\n                \r\n                // 更新正在构建的AI消息\r\n                setMessages(prevMessages => {\r\n                  const lastMessage = prevMessages[prevMessages.length - 1];\r\n                  if (lastMessage.sender === 'ai' && lastMessage.id === 'ai-typing') {\r\n                    // 更新现有AI消息\r\n                    const updatedMessages = [...prevMessages];\r\n                    updatedMessages[updatedMessages.length - 1] = {\r\n                      ...lastMessage,\r\n                      text: aiResponse\r\n                    };\r\n                    return updatedMessages;\r\n                  } else {\r\n                    // 创建新的AI消息\r\n                    return [...prevMessages, {\r\n                      id: 'ai-typing',\r\n                      text: aiResponse,\r\n                      sender: 'ai',\r\n                      timestamp: new Date().toLocaleTimeString()\r\n                    }];\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.error('解析响应出错:', e);\r\n        }\r\n      }\r\n      \r\n      // 最终消息\r\n      if (aiResponse) {\r\n        setMessages(prevMessages => {\r\n          const filteredMessages = prevMessages.filter(msg => msg.id !== 'ai-typing');\r\n          return [...filteredMessages, {\r\n            id: Date.now() + 1,\r\n            text: aiResponse,\r\n            sender: 'ai',\r\n            timestamp: new Date().toLocaleTimeString()\r\n          }];\r\n        });\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('调用AI服务出错:', error);\r\n      // 显示错误消息\r\n      setMessages(prevMessages => [...prevMessages, {\r\n        id: Date.now() + 1,\r\n        text: '抱歉，我遇到了问题，无法回应。请稍后再试。',\r\n        sender: 'ai',\r\n        timestamp: new Date().toLocaleTimeString()\r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <h1>Apple Chat</h1>\r\n        <div className=\"connection-status\">\r\n          {connected ? <span className=\"status-connected\">在线</span> : <span className=\"status-disconnected\">离线</span>}\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"no-messages\">还没有消息。开始一个新对话吧！</div>\r\n        ) : (\r\n          messages.map(message => (\r\n            <div key={message.id} className={`message ${message.sender === 'user' ? 'message-sent' : 'message-received'}`}>\r\n              <div className=\"message-bubble\">\r\n                {message.text}\r\n              </div>\r\n              <div className=\"message-timestamp\">{message.timestamp}</div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"message-input\"\r\n          placeholder=\"输入消息...\"\r\n          value={messageText}\r\n          onChange={(e) => setMessageText(e.target.value)}\r\n          disabled={isLoading}\r\n        />\r\n        <button type=\"submit\" className=\"send-button\" disabled={isLoading || messageText.trim() === ''}>\r\n          {isLoading ? '发送中...' : '发送'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,cAAc,GAAGb,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACde,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAId,WAAW,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAE/B;IACA,MAAMC,WAAW,GAAG;MAClBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEpB,WAAW;MACjBqB,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC;IAC3C,CAAC;IAEDxB,WAAW,CAACyB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAER,WAAW,CAAC,CAAC;IAC3Df,cAAc,CAAC,EAAE,CAAC;IAClBI,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMoB,WAAW,GAAG3B,QAAQ,CAAC4B,GAAG,CAACC,GAAG,KAAK;QACvCC,IAAI,EAAED,GAAG,CAACN,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,WAAW;QAClDQ,OAAO,EAAEF,GAAG,CAACP;MACf,CAAC,CAAC,CAAC;;MAEH;MACAK,WAAW,CAACK,IAAI,CAAC;QACfF,IAAI,EAAE,MAAM;QACZC,OAAO,EAAEb,WAAW,CAACI;MACvB,CAAC,CAAC;;MAEF;MACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,SAAS,CAAC;MAC5B;;MAEA;MACA,MAAMC,MAAM,GAAGT,QAAQ,CAACI,IAAI,CAACM,SAAS,CAAC,CAAC;MACxC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;MACjC,IAAIC,UAAU,GAAG,EAAE;MAEnB,OAAO,IAAI,EAAE;QACX,MAAM;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAG,MAAMN,MAAM,CAACO,IAAI,CAAC,CAAC;QAC3C,IAAID,IAAI,EAAE;QAEV,MAAME,KAAK,GAAGN,OAAO,CAACO,MAAM,CAACJ,KAAK,CAAC;QACnC,IAAI;UACF;UACA,MAAMK,KAAK,GAAGF,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACtC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;UAElE,KAAK,MAAMsC,IAAI,IAAIH,KAAK,EAAE;YACxB,IAAIG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;cAC7B,MAAMC,OAAO,GAAGF,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;cACjC,IAAID,OAAO,KAAK,QAAQ,EAAE;cAE1B,MAAME,QAAQ,GAAGrB,IAAI,CAACsB,KAAK,CAACH,OAAO,CAAC;cACpC,IAAIE,QAAQ,CAACE,OAAO,IAAIF,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,IAAIH,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC/B,OAAO,EAAE;gBACtF,MAAMA,OAAO,GAAG4B,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC/B,OAAO;gBACjDe,UAAU,IAAIf,OAAO;;gBAErB;gBACA9B,WAAW,CAACyB,YAAY,IAAI;kBAC1B,MAAMqC,WAAW,GAAGrC,YAAY,CAACA,YAAY,CAACsC,MAAM,GAAG,CAAC,CAAC;kBACzD,IAAID,WAAW,CAACxC,MAAM,KAAK,IAAI,IAAIwC,WAAW,CAAC5C,EAAE,KAAK,WAAW,EAAE;oBACjE;oBACA,MAAM8C,eAAe,GAAG,CAAC,GAAGvC,YAAY,CAAC;oBACzCuC,eAAe,CAACA,eAAe,CAACD,MAAM,GAAG,CAAC,CAAC,GAAG;sBAC5C,GAAGD,WAAW;sBACdzC,IAAI,EAAEwB;oBACR,CAAC;oBACD,OAAOmB,eAAe;kBACxB,CAAC,MAAM;oBACL;oBACA,OAAO,CAAC,GAAGvC,YAAY,EAAE;sBACvBP,EAAE,EAAE,WAAW;sBACfG,IAAI,EAAEwB,UAAU;sBAChBvB,MAAM,EAAE,IAAI;sBACZC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC;oBAC3C,CAAC,CAAC;kBACJ;gBACF,CAAC,CAAC;cACJ;YACF;UACF;QACF,CAAC,CAAC,OAAOV,CAAC,EAAE;UACVmD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEpD,CAAC,CAAC;QAC7B;MACF;;MAEA;MACA,IAAI+B,UAAU,EAAE;QACd7C,WAAW,CAACyB,YAAY,IAAI;UAC1B,MAAM0C,gBAAgB,GAAG1C,YAAY,CAAC4B,MAAM,CAACzB,GAAG,IAAIA,GAAG,CAACV,EAAE,KAAK,WAAW,CAAC;UAC3E,OAAO,CAAC,GAAGiD,gBAAgB,EAAE;YAC3BjD,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;YAClBC,IAAI,EAAEwB,UAAU;YAChBvB,MAAM,EAAE,IAAI;YACZC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC;UAC3C,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IAEF,CAAC,CAAC,OAAO0C,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjC;MACAlE,WAAW,CAACyB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;QAC5CP,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;QAClBC,IAAI,EAAE,uBAAuB;QAC7BC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC;MAC3C,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKwE,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzE,OAAA;MAAQwE,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BzE,OAAA;QAAAyE,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB7E,OAAA;QAAKwE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BlE,SAAS,gBAAGP,OAAA;UAAMwE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAAG7E,OAAA;UAAMwE,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAET7E,OAAA;MAAKwE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAChCtE,QAAQ,CAACgE,MAAM,KAAK,CAAC,gBACpBnE,OAAA;QAAKwE,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAElD1E,QAAQ,CAAC4B,GAAG,CAAC+C,OAAO,iBAClB9E,OAAA;QAAsBwE,SAAS,EAAE,WAAWM,OAAO,CAACpD,MAAM,KAAK,MAAM,GAAG,cAAc,GAAG,kBAAkB,EAAG;QAAA+C,QAAA,gBAC5GzE,OAAA;UAAKwE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5BK,OAAO,CAACrD;QAAI;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACN7E,OAAA;UAAKwE,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEK,OAAO,CAACnD;QAAS;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAJpDC,OAAO,CAACxD,EAAE;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CACN,CACF,eACD7E,OAAA;QAAK+E,GAAG,EAAEpE;MAAe;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAEN7E,OAAA;MAAMwE,SAAS,EAAC,oBAAoB;MAACQ,QAAQ,EAAE/D,iBAAkB;MAAAwD,QAAA,gBAC/DzE,OAAA;QACEiF,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,eAAe;QACzBU,WAAW,EAAC,6BAAS;QACrBhC,KAAK,EAAE7C,WAAY;QACnB8E,QAAQ,EAAGjE,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACkE,MAAM,CAAClC,KAAK,CAAE;QAChDmC,QAAQ,EAAE5E;MAAU;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACF7E,OAAA;QAAQiF,IAAI,EAAC,QAAQ;QAACT,SAAS,EAAC,aAAa;QAACa,QAAQ,EAAE5E,SAAS,IAAIJ,WAAW,CAACe,IAAI,CAAC,CAAC,KAAK,EAAG;QAAAqD,QAAA,EAC5FhE,SAAS,GAAG,QAAQ,GAAG;MAAI;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC3E,EAAA,CAjLQD,GAAG;AAAAqF,EAAA,GAAHrF,GAAG;AAmLZ,eAAeA,GAAG;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}